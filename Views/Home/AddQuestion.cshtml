@model OnlineExam.Models.Question

@{
    ViewBag.Title = "Add Question";
    Layout = "~/Views/Shared/_Layout1.cshtml";
}
<br />
<br />
<h1 style="text-align:center;background-color:darkcyan">Add Question</h1>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    if (@TempData["msg"] != null)
    {
        <div class="alert alert-success">
            @TempData["msg"]
        </div>
    }
    <div class="form-horizontal">

        <div class="form-group">
            @Html.LabelFor(model => model.QuesCategoryId, "QuesCategoryId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("QuesCategoryId", ViewBag.list as SelectList, "--Select--", htmlAttributes: new { @class = "form-control", @style = "width:800px" })
                @Html.ValidationMessageFor(model => model.QuesCategoryId, "", new { @class = "text-danger" })
            </div>
        </div>

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Text, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Text, new { @style = "height: 100px; width:800px", htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Text, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OPA, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OPA, new { htmlAttributes = new { @class = "form-control", @style = "width:800px" } })
                @Html.ValidationMessageFor(model => model.OPA, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OPB, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OPB, new { htmlAttributes = new { @class = "form-control", @style = "width:800px" } })
                @Html.ValidationMessageFor(model => model.OPB, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OPC, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OPC, new { htmlAttributes = new { @class = "form-control", @style = "width:800px" } })
                @Html.ValidationMessageFor(model => model.OPC, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OPD, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OPD, new { htmlAttributes = new { @class = "form-control", @style = "width:800px" } })
                @Html.ValidationMessageFor(model => model.OPD, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.COP, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.COP, new { htmlAttributes = new { @class = "form-control", @style = "width:800px" } })
                @Html.ValidationMessageFor(model => model.COP, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Submit Question" class="btn btn-success" />
            </div>
        </div>
    </div>
}

